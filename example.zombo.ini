[preview]
# 0 for false, 1 for true
# Only generates and prints commands, does not run them
print_only: 0


[ffmpeg]
# Entire path to ffmpeg executable, e.g. c:\ffmpeg.exe
path: S:\Apps\ffmpeg-20200206-343ccfc-win64-static\bin\ffmpeg.exe

# The uncommented bit will convert the video and preserve everything else, subs, fonts, etc.
# CRF controls the quality, the lower the number, the higher the quality and larger the file size.
#  I've done a lot of side by side testing and found 20 to be a good middle ground, with only
#  minor visual artifacts in dark scenes which are hardly noticeable, especially if you're not
#  REALLY looking for them. In light scenes, I couldn't see a difference between the originals
#  and CRF 20

# -map 0 is kind of complicated, you'll just have to look at the FFMPEG docs if
# you want to understand it, Here it allows up to make sure to get things like
# the subtitles and font attachments

# -c is for codec, -c copy copies (no encoding) stuff into the new file
# When you want to change specific parts you use a colon, like -c:a for audio and -c:v for video

# Add this to the args if you want to re-encode the audio into MP3 v0 (highest quality mp3 with
# variable bit rate). I use it when the audio is encoded in flac, taking up a bunch of space.
# v0 audio re-encode: -c:a libmp3lame -qscale:a 0
# see https://trac.ffmpeg.org/wiki/Encode/MP3 for other options

# ffmpeg documentation with further details on these arguments:
# https://ffmpeg.org/ffmpeg.html

# tl;dr: just use what's uncommented if you want your videos to be smaller

# All ffmpeg args to use
args: -map 0 -c copy -c:v libx265 -crf 20




# The script takes the first entry in the input list and matches it to the first
#  entry in the output list.
# The new names can be completely different, if you want to move tags like I did below, I
#  recommend using a multi line cursor.
# Since this is an ini file, the only requirements are that you don't have extra line breaks
#  and the names be indented below the files line; there is no need for quotes, brackets, etc.

# Tip: In Windows Explorer, you can copy the names of multiple files at once.
#  Select your files, hold shift and right click, then use the copy as path option.
#  From there, using a multi line cursor you can easily remove all but the file names.

# The only real gotcha which can be easy to accidentally do is naming the output
#  the same as the input.

[input]
# Folder without trailing slash/backslash, e.g. S:\Anime

path: S:\Anime\Downloads
# List of file names, one per line, indented
files:
    [HorribleSubs] Best Animu Ever - 1 [1080p].mkv
    [HorribleSubs] Best Animu Ever - 2 [1080p].mkv
    [HorribleSubs] Best Animu Ever - 3 [1080p].mkv


# additional_files is only for if you have multiple inputs, e.g., you're
#  combining multiple streams into one output, like adding in another subtitle
#  track or audio track
[additional_files]
# 0 for false, 1 for true
use_additional_files: 0
path:
files:


[output]
path: S:\Anime\Converted
files:
    Best Animu Ever - 1 [HorribleSubs][1080p][HEVC re-encode].mkv
    Best Animu Ever - 2 [HorribleSubs][1080p][HEVC re-encode].mkv
    Best Animu Ever - 3 [HorribleSubs][1080p][HEVC re-encode].mkv

